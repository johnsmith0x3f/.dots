[colors]
bg      = #181818
bg-alt  = #212121
fg      = #F8F8F8
primary = 
alert   =

[bar/foobar]

### Position {{{

# Whether to put the bar at the bottom. Default is false.
bottom = false
# Offset the bar window in the x and/or y direction.
offset-x = 0
offset-y = 0

### }}}

# Dimensions.
height = 24px
width  = 100%

radius = 0.0

# Colors.
background = ${colors.bg}
foreground = ${colors.fg}
# Fonts.
font-0 = RobotoMono-Medium:size=18
font-1 = Phosphor:size=18
font-2 = NotoSansCJK-Regular:size=15

border-size = 0
# Lines used as top\bottom margins.
line-size   = 3
line-color  = ${colors.bg}
# Paddings to the left\right.
padding     = 0

# modules-left   = workspaces
# modules-center = space
modules-right  = datime

# theme.bg          = "#181818"
# theme.altbg       = "#212121"
# theme.fg          = "#F8F8F8"
# theme.comment     = "#585858"
# theme.red         = "#AB4642"
# theme.blue        = "#7CAFC2"
# theme.green       = "#A1B56C"
# theme.yellow      = "#F7CA88"
# theme.magenta     = "#BA8BAF"
# theme.cyan        = "#86C1B9"
# theme.honolulu    = "#0077B6"

[bar/mybar]
; Prefer fixed center position for the `modules-center` block. 
; The center block will stay in the middle of the bar whenever
; possible. It can still be pushed around if other blocks need
; more space.
; When false, the center block is centered in the space between 
; the left and right block.
fixed-center = true

; Values applied to all borders
; Individual side values can be defined using:
;   border-{left,top,right,bottom}-size
;   border-{left,top,right,bottom}-color
; The top and bottom borders are added to the bar height, so the effective
; window height is:
;   height + border-top-size + border-bottom-size
; Meanwhile the effective window width is defined entirely by the width key and
; the border is placed within this area. So you effectively only have the
; following horizontal space on the bar:
;   width - border-right-size - border-left-size
; border-size supports any percentage with offset.
; For border-{left,right}-size, the percentage is relative to the monitor width
; and for border-{top,bottom}-size, it is relative to the monitor height.
border-size =
border-color =

; Padding (number of spaces, pixels, or points) to add at the beginning/end of
; the bar
; Individual side values can be defined using:
;   padding-{left,right}
padding = 0

; Margin (number of spaces, pixels, or points) to add before/after each module
; Individual side values can be defined using:
;   module-margin-{left,right}
module-margin = 0

; Modules are added to one of the available blocks
;   modules-left = cpu ram
;   modules-center = xwindow xbacklight
;   modules-right = ipc clock
modules-left =
modules-center =
modules-right =

; The separator will be inserted between the output of each module
; This has the same properties as a label
separator = 

; Opacity value between 0.0 and 1.0 used on fade in/out
dim-value = 1.0

; Value to be used to set the WM_NAME atom
; If the value is empty or undefined, the atom value
; will be created from the following template: polybar-[BAR]_[MONITOR]
; NOTE: The placeholders are not available for custom values
wm-name =

; Locale used to localize various module data (e.g. date)
; Expects a valid libc locale, for example: sv_SE.UTF-8
locale = 

; Restack the bar window and put it above the
; selected window manager's root
;
; Fixes the issue where the bar is being drawn
; on top of fullscreen window's
;
; Currently supported values:
;   generic (Tries the ewmh strategy and falls back
;            to the bottom strategy.
;            This is a best-effort strategy and may change and be tweaked in
;            the future, the individual strategies are available on their own)
;           (New in version 3.6.0)
;           (Changed in version 3.7.0: Tries the ewmh strategy instead of just
;            the bottom strategy)
;   bspwm   (Moves the bar window above all bspwm root windows)
;   bottom  (Moves the bar window above the first window in the window stack.
;            Works in xmonad, may not work on other WMs
;            New in version 3.7.0)
;   ewmh    (Moves the bar above the window specified in _NET_SUPPORTING_WM_CHECK,
;            if it is set
;            New in version 3.7.0)
;   i3 (requires `override-redirect = true`)
; wm-restack =

; Whether polybar defines struts (_NET_WM_STRUT_PARTIAL and _NET_WM_STRUT)
; New in version 3.7.0
enable-struts = true

; Set a DPI values used when rendering text
; This only affects scalable fonts
; Set this to 0 to let polybar calculate the dpi from the screen size.
; dpi = 
dpi-x = 96
dpi-y = 96

; Enable support for inter-process messaging
; See the Messaging wiki page for more details.
enable-ipc = false

; Fallback click handlers that will be called if
; there's no matching module handler found.
click-left = 
click-middle = 
click-right =
scroll-up =
scroll-down =
double-click-left =
double-click-middle =
double-click-right =

; If two clicks are received within this interval (ms), they are recognized as
; a double click.
; New in version 3.6.0
double-click-interval = 400

; Requires polybar to be built with xcursor support (xcb-util-cursor)
; Possible values are:
; - default   : The default pointer as before, can also be an empty string (default)
; - pointer   : Typically in the form of a hand
; - ns-resize : Up and down arrows, can be used to indicate scrolling
cursor-click = 
cursor-scroll =
